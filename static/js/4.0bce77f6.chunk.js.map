{"version":3,"sources":["layout/MainLayout.module.scss","components/InDepthLink.js","layout/MainLayout.js","components/Main/ForecastInDepth/ForecastInDepth.module.scss","components/Main/ForecastInDepth/index.js"],"names":["module","exports","btnStyle","background","borderRadius","color","fontWeight","textDecoration","padding","marginBottom","marginRight","alignSelf","InDepthLink","date","path","children","weekday","to","pathname","thisDate","weekDay","style","MainLayout","linkPath","dayName","linkText","className","mainContainer","wrapper","ForecastInDepth","location","dayQuery","URLSearchParams","window","search","get","todayDate","dateFormat","Date","month","day","year","eightHours","hourForecast","useContext","WeatherAppContext","dayOfMonth","useRef","currentHours","current","getDate","filter","item","dt","slice","useHourData","contentContainer","weekdayTitle","dateSubtitle","length","hourlyList","map","index","pop","weather","temp","hour","timeStyle","hourlyItem","itemTime","id","weatherIcon","tempText","Math","floor"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,QAAU,8B,mDCCxEC,EAAW,CACfC,WAAY,OACZC,aAAc,OACdC,MAAO,OACPC,WAAY,OACZC,eAAgB,OAChBC,QAAQ,+BACRC,aAAc,OACdC,YAAa,OACbC,UAAW,YAcEC,EAXK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC3C,OACE,cAAC,IAAD,CACEC,GAAI,CAAEC,SAAUJ,EAAMK,SAAUN,EAAMO,QAASJ,GAC/CK,MAAOnB,EAFT,SAIGa,K,QCRQO,IATI,SAAC,GAAqD,IAAnDP,EAAkD,EAAlDA,SAAUF,EAAwC,EAAxCA,KAAMU,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACvD,OACE,sBAAKC,UAAWC,gBAAhB,UACE,qBAAKD,UAAWE,UAAhB,SAA0Bb,IAC1B,cAAC,EAAD,CAAaF,KAAMA,EAAMC,KAAMS,EAAUP,QAASQ,EAAlD,SAA4DC,S,mBCNlEzB,EAAOC,QAAU,CAAC,aAAe,sCAAsC,YAAc,qCAAqC,aAAe,sCAAsC,SAAW,kCAAkC,iBAAmB,0CAA0C,WAAa,oCAAoC,WAAa,oCAAoC,SAAW,oC,yFCiFvX4B,UApDS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnBC,EAAW,IAAIC,gBAAgBC,OAAOH,SAASI,QAAQC,IAAI,OAE3DC,EAAYC,YAAW,IAAIC,KAAKP,GAAW,CAC/CQ,MAAO,OACPC,IAAK,UACLC,KAAM,YAGFC,EAvBY,SAACvB,GAAc,IACzBwB,EAAiBC,qBAAWC,KAA5BF,aACFG,EAAaC,iBAAO,GACpBC,EAAeD,iBAAO,IAE5B,GAAI5B,EAKF,OAJA2B,EAAWG,QAAU9B,EAAS+B,UAC9BF,EAAaC,QAAUN,EAAaQ,QAClC,SAACC,GAAD,OAAU,IAAId,KAAe,IAAVc,EAAKC,IAAWH,YAAcJ,EAAWG,WAEvDD,EAAaC,QAAQK,MAAM,EAAG,GAapBC,CAAY,IAAIjB,KAAKP,IAExC,OAQE,aAPA,CAOC,IAAD,CAAYR,SAAS,IAAIE,SAAS,mBAAlC,SACE,sBAAKC,UAAW8B,mBAAhB,UACE,oBAAI9B,UAAW+B,eAAf,SAA8B3B,EAASV,UACvC,oBAAIM,UAAWgC,eAAf,SAA8BtB,IACP,IAAtBM,EAAWiB,OACR,4FACA,KAEJ,oBAAIjC,UAAWkC,aAAf,SACGlB,GACCA,EAAWmB,KAAI,WAA6BC,GAAW,IAArCT,EAAoC,EAApCA,GAAIU,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,KAC5BC,EAAO7B,YAAW,IAAIC,KAAU,IAALe,GAAY,CAC3Cc,UAAW,UAEb,OACE,qBAAIzC,UAAW0C,aAAf,UACE,sBAAM1C,UAAW2C,WAAjB,SAA4BH,IAC5B,mBACExC,UAAS,oBAAesC,EAAQ,GAAGM,GAA1B,YAAgCC,iBAE3C,uBAAM7C,UAAW8C,WAAjB,UACGC,KAAKC,MAAMT,GADd,IACqB,mBAAGvC,UAAU,qBAElC,iDAAkB+C,KAAKC,MAAY,IAANX,GAA7B,SAR8BD","file":"static/js/4.0bce77f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MainLayout_mainContainer__2LEbX\",\"wrapper\":\"MainLayout_wrapper__2BIJP\"};","import { Link } from 'react-router-dom';\r\n\r\nconst btnStyle = {\r\n  background: '#aaa',\r\n  borderRadius: '31px',\r\n  color: '#fff',\r\n  fontWeight: 'bold',\r\n  textDecoration: 'none',\r\n  padding: `calc((44px - 1rem) / 2) 16px`,\r\n  marginBottom: '16px',\r\n  marginRight: '16px',\r\n  alignSelf: 'flex-end'\r\n};\r\n\r\nconst InDepthLink = ({ date, path, children, weekday }) => {\r\n  return (\r\n    <Link\r\n      to={{ pathname: path, thisDate: date, weekDay: weekday }}\r\n      style={btnStyle}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default InDepthLink;\r\n","import InDepthLink from '../components/InDepthLink';\r\nimport { mainContainer, wrapper } from './MainLayout.module.scss';\r\n\r\nconst MainLayout = ({ children, date, linkPath, dayName, linkText }) => {\r\n  return (\r\n    <div className={mainContainer}>\r\n      <div className={wrapper}>{children}</div>\r\n      <InDepthLink date={date} path={linkPath} weekday={dayName}>{linkText}</InDepthLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weekdayTitle\":\"ForecastInDepth_weekdayTitle__1e-sT\",\"weatherIcon\":\"ForecastInDepth_weatherIcon__2DKq2\",\"dateSubtitle\":\"ForecastInDepth_dateSubtitle__1RdTn\",\"tempText\":\"ForecastInDepth_tempText__1u_H8\",\"contentContainer\":\"ForecastInDepth_contentContainer__2COZg\",\"hourlyList\":\"ForecastInDepth_hourlyList__2rD8r\",\"hourlyItem\":\"ForecastInDepth_hourlyItem__OLyXo\",\"itemTime\":\"ForecastInDepth_itemTime__3QzG0\"};","import { useContext, useRef } from 'react';\r\nimport MainLayout from '../../../layout/MainLayout';\r\nimport { dateFormat } from '../../../utils';\r\nimport { WeatherAppContext } from '../../Context';\r\n\r\nimport {\r\n  contentContainer,\r\n  weekdayTitle,\r\n  dateSubtitle,\r\n  hourlyList,\r\n  hourlyItem,\r\n  itemTime,\r\n  tempText,\r\n  weatherIcon,\r\n} from './ForecastInDepth.module.scss';\r\n\r\nconst useHourData = (thisDate) => {\r\n  const { hourForecast } = useContext(WeatherAppContext);\r\n  const dayOfMonth = useRef(0);\r\n  const currentHours = useRef([]);\r\n\r\n  if (thisDate) {\r\n    dayOfMonth.current = thisDate.getDate();\r\n    currentHours.current = hourForecast.filter(\r\n      (item) => new Date(item.dt * 1000).getDate() === dayOfMonth.current\r\n    );\r\n    return currentHours.current.slice(0, 8);\r\n  }\r\n};\r\n\r\nconst ForecastInDepth = ({ location }) => {\r\n  const dayQuery = new URLSearchParams(window.location.search).get('day');\r\n\r\n  const todayDate = dateFormat(new Date(dayQuery), {\r\n    month: 'long',\r\n    day: 'numeric',\r\n    year: 'numeric',\r\n  });\r\n\r\n  const eightHours = useHourData(new Date(dayQuery));\r\n\r\n  return (\r\n    /**\r\n     * TODO:\r\n     *  - Add conditional to provide \"Not Available\" text\r\n     *    if no hourly data exists for a given day passed to this component\r\n     *  - Replace Router Link prop that passes in Date object with call to the URL query to generate\r\n     *    the hourly data for the chosen day.\r\n     */\r\n    <MainLayout linkPath='/' linkText='Current Forecast'>\r\n      <div className={contentContainer}>\r\n        <h1 className={weekdayTitle}>{location.weekDay}</h1>\r\n        <h2 className={dateSubtitle}>{todayDate}</h2>\r\n        {eightHours.length === 0 \r\n          ? <h3>This data is currently not available. Check back tomorrow!</h3>\r\n          : null\r\n        }\r\n        <ul className={hourlyList}>\r\n          {eightHours &&\r\n            eightHours.map(({ dt, pop, weather, temp }, index) => {\r\n              const hour = dateFormat(new Date(dt * 1000), {\r\n                timeStyle: 'short',\r\n              });\r\n              return (\r\n                <li className={hourlyItem} key={index}>\r\n                  <span className={itemTime}>{hour}</span>\r\n                  <i\r\n                    className={`wi wi-owm-${weather[0].id} ${weatherIcon}`}\r\n                  ></i>\r\n                  <span className={tempText}>\r\n                    {Math.floor(temp)} <i className='wi wi-degrees'></i>\r\n                  </span>\r\n                  <span>{`Precip: ${Math.floor(pop * 100)}%`}</span>\r\n                </li>\r\n              );\r\n            })}\r\n        </ul>\r\n      </div>\r\n    </MainLayout>\r\n  );\r\n};\r\n\r\nexport default ForecastInDepth;\r\n"],"sourceRoot":""}