{"version":3,"sources":["layout/MainLayout.module.scss","components/InDepthLink.js","layout/MainLayout.js","components/Main/CurrentForecast/CurrentForecast.module.scss","hooks/useWeatherData.js","components/Main/CurrentForecast/index.js"],"names":["module","exports","btnStyle","background","borderRadius","color","fontWeight","textDecoration","padding","marginBottom","marginRight","alignSelf","InDepthLink","date","path","children","weekday","to","pathname","thisDate","weekDay","style","MainLayout","linkPath","dayName","linkText","className","mainContainer","wrapper","useOpenWeatherData","data","useRef","weekdayName","monthDay","monthDayYear","currentTemp","hiTemp","lowTemp","weatherId","weatherName","dt","temp","weather","current","Date","dateFormat","month","day","year","Math","floor","max","mix","id","main","CurrentForecast","currentForecast","useContext","WeatherAppContext","toLocaleDateString","contentContainer","sectionTitle","currTemp","weatherIcon","fullDate"],"mappings":"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","file":"static/js/3.fb9a5a6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MainLayout_mainContainer__2LEbX\",\"wrapper\":\"MainLayout_wrapper__2BIJP\"};","import { Link } from 'react-router-dom';\r\n\r\nconst btnStyle = {\r\n  background: '#aaa',\r\n  borderRadius: '31px',\r\n  color: '#fff',\r\n  fontWeight: 'bold',\r\n  textDecoration: 'none',\r\n  padding: `calc((44px - 1rem) / 2) 16px`,\r\n  marginBottom: '16px',\r\n  marginRight: '16px',\r\n  alignSelf: 'flex-end'\r\n};\r\n\r\nconst InDepthLink = ({ date, path, children, weekday }) => {\r\n  return (\r\n    <Link\r\n      to={{ pathname: path, thisDate: date, weekDay: weekday }}\r\n      style={btnStyle}\r\n    >\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default InDepthLink;\r\n","import InDepthLink from '../components/InDepthLink';\r\nimport { mainContainer, wrapper } from './MainLayout.module.scss';\r\n\r\nconst MainLayout = ({ children, date, linkPath, dayName, linkText }) => {\r\n  return (\r\n    <div className={mainContainer}>\r\n      <div className={wrapper}>{children}</div>\r\n      <InDepthLink date={date} path={linkPath} weekday={dayName}>{linkText}</InDepthLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currTemp\":\"CurrentForecast_currTemp__3QjjK\",\"weatherIcon\":\"CurrentForecast_weatherIcon__33Fd-\",\"weekDay\":\"CurrentForecast_weekDay__41Bdr\",\"fullDate\":\"CurrentForecast_fullDate__1dgM6\",\"sectionTitle\":\"CurrentForecast_sectionTitle__Lc4Q3\",\"mainContainer\":\"CurrentForecast_mainContainer__jlT5l\",\"wrapper\":\"CurrentForecast_wrapper__3KUYP\",\"contentContainer\":\"CurrentForecast_contentContainer__S1Bec\",\"currentOutlookBtn\":\"CurrentForecast_currentOutlookBtn__3QX21\"};","import { useRef } from 'react';\r\nimport { dateFormat } from '../utils';\r\n\r\n/**\r\n * Hook to accept data from the Open Weather API and return formatted immutable values.\r\n * @param {Object} data\r\n * @returns {Object} The values stored in variables that are called for render to a component\r\n *\r\n * Variable options to desconstruct:\r\n * - date - original Date object\r\n * - weekdayName - the date formatted to the name of the day (i.e. Monday)\r\n * - monthDayYear - the full date of a given day (i.e. January 18, 2021)\r\n * - currentTemp - the current temperature\r\n * - hiTemp - High temperature for the given day\r\n * - lowTemp - Low temperature for the given day\r\n * - weatherId - ID used to render a custom icon\r\n * - weatherName - Main description for the day's weather (i.e. Clouds, Rain, Sunny)\r\n */\r\nconst useOpenWeatherData = (data) => {\r\n  const date = useRef(0);\r\n  const weekdayName = useRef('');\r\n  const monthDay = useRef('');\r\n  const monthDayYear = useRef('');\r\n  const currentTemp = useRef(0);\r\n  const hiTemp = useRef(0);\r\n  const lowTemp = useRef(0);\r\n  const weatherId = useRef(0);\r\n  const weatherName = useRef('');\r\n\r\n  if (data) {\r\n    const { dt, temp, weather } = data;\r\n    date.current = new Date(dt * 1000);\r\n\r\n    weekdayName.current = dateFormat(date.current, { weekday: 'long' });\r\n\r\n    monthDay.current = dateFormat(date.current, {\r\n      month: 'numeric',\r\n      day: 'numeric',\r\n    });\r\n\r\n    monthDayYear.current = dateFormat(date.current, {\r\n      day: 'numeric',\r\n      month: 'long',\r\n      year: 'numeric',\r\n    });\r\n\r\n    currentTemp.current = typeof temp !== 'object' && Math.floor(temp);\r\n\r\n    hiTemp.current = typeof temp === 'object' && Math.floor(temp.max);\r\n    lowTemp.current = typeof temp === 'object' && Math.floor(temp.mix);\r\n\r\n    weatherId.current = weather[0].id;\r\n\r\n    weatherName.current = weather[0].main;\r\n  }\r\n\r\n  return {\r\n    date: date.current,\r\n    weekdayName: weekdayName.current,\r\n    monthDay: monthDay.current,\r\n    monthDayYear: monthDayYear.current,\r\n    currentTemp: currentTemp.current,\r\n    hiTemp: hiTemp.current,\r\n    lowTemp: lowTemp.current,\r\n    weatherId: weatherId.current,\r\n    weatherName: weatherName.current,\r\n  };\r\n};\r\n\r\nexport default useOpenWeatherData;\r\n","import { useContext } from 'react';\r\nimport useOpenWeatherData from '../../../hooks/useWeatherData';\r\nimport MainLayout from '../../../layout/MainLayout';\r\nimport { WeatherAppContext } from '../../Context';\r\n\r\nimport {\r\n  contentContainer,\r\n  sectionTitle,\r\n  currTemp,\r\n  weatherIcon,\r\n  weekDay,\r\n  fullDate,\r\n} from './CurrentForecast.module.scss';\r\n\r\nconst CurrentForecast = () => {\r\n  const { currentForecast } = useContext(WeatherAppContext);\r\n  const {\r\n    date,\r\n    weekdayName,\r\n    monthDayYear,\r\n    weatherId,\r\n    currentTemp,\r\n  } = useOpenWeatherData(currentForecast);\r\n\r\n  return (\r\n      <MainLayout\r\n        date={date}\r\n        linkPath={`/forecast-in-depth/?day=${date && date.toLocaleDateString('en-US', {day: 'numeric', month: 'numeric', year: 'numeric'})}`}\r\n        dayName='Today'\r\n        linkText=\"Today's Outlook\"\r\n      >\r\n        <div className={contentContainer}>\r\n          <h2 className={sectionTitle}>Right Now</h2>\r\n          <span className={currTemp}>\r\n            {currentTemp} <i className='wi wi-fahrenheit'></i>\r\n          </span>\r\n          <i className={`wi wi-owm-${weatherId} ${weatherIcon}`}></i>\r\n          <span className={weekDay}>{weekdayName}</span>\r\n          <span className={fullDate}>{monthDayYear}</span>\r\n        </div>\r\n\r\n      </MainLayout>\r\n  );\r\n};\r\n\r\nexport default CurrentForecast;\r\n"],"sourceRoot":""}